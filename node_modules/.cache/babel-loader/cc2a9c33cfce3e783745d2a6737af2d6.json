{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/16031/GitHub/ariellam.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/16031/GitHub/ariellam.github.io/src/components/projects/projectCell.jsx\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  position: absolute;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  &:hover {\\n    opacity: 0%;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 150px;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  border-top: 0px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  padding: 20px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport ProjectButtons from './projectButtons';\nimport ProjectDescription from './projectDescription';\nconst ProjectCellContainer = styled.div(_templateObject());\nconst ProjectDetails = styled.div(_templateObject2());\nconst HeaderImage = styled.img(_templateObject3());\nconst HeaderImageHover = styled.img(_templateObject4());\n\nclass ProjectCell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hover: false\n    };\n\n    this.changeImage = hover => {\n      this.setState({\n        hover\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(ProjectCellContainer, {\n      onMouseEnter: () => this.changeImage(true),\n      onMouseLeave: () => this.changeImage(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(HeaderImageHover, {\n      src: this.props.project.imageHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(HeaderImage, {\n      src: this.props.project.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(ProjectDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ProjectDescription, {\n      title: this.props.project.title,\n      subtitle: this.props.project.subtitle,\n      description: this.props.project.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(ProjectButtons, {\n      github: this.props.project.github,\n      devpost: this.props.project.devpost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ProjectCell;","map":{"version":3,"sources":["/Users/16031/GitHub/ariellam.github.io/src/components/projects/projectCell.jsx"],"names":["React","Component","styled","ProjectButtons","ProjectDescription","ProjectCellContainer","div","ProjectDetails","HeaderImage","img","HeaderImageHover","ProjectCell","state","hover","changeImage","setState","render","props","project","imageHover","image","title","subtitle","description","github","devpost"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,MAAMC,oBAAoB,GAAGH,MAAM,CAACI,GAAV,mBAA1B;AAKA,MAAMC,cAAc,GAAGL,MAAM,CAACI,GAAV,oBAApB;AASA,MAAME,WAAW,GAAGN,MAAM,CAACO,GAAV,oBAAjB;AAOA,MAAMC,gBAAgB,GAAGR,MAAM,CAACO,GAAV,oBAAtB;;AAKA,MAAME,WAAN,SAA0BV,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCW,KADkC,GAC1B;AACNC,MAAAA,KAAK,EAAE;AADD,KAD0B;;AAAA,SAKlCC,WALkC,GAKnBD,KAAD,IAAW;AACvB,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAPiC;AAAA;;AASlCG,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,oBAAD;AACE,MAAA,YAAY,EAAE,MAAM,KAAKF,WAAL,CAAiB,IAAjB,CADtB;AAEE,MAAA,YAAY,EAAE,MAAM,KAAKA,WAAL,CAAiB,KAAjB,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWC,OAAX,CAAmBC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,OAAX,CAAmBG,KAD5B;AAEE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,OAAX,CAAmBI,QAF/B;AAGE,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBK,WAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWC,OAAX,CAAmBM,MAD7B;AAEE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,OAAX,CAAmBO,OAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CALF,CADF;AAmBD;;AA7BiC;;AAgCpC,eAAed,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport ProjectButtons from './projectButtons';\nimport ProjectDescription from './projectDescription'\n\nconst ProjectCellContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ProjectDetails = styled.div`\n  height: 150px;\n  border: 1px solid rgba(0,0,0,0.1);\n  border-top: 0px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 20px;\n`\nconst HeaderImage = styled.img`\n  width: 100%;\n  &:hover {\n    opacity: 0%;\n  }\n`\n\nconst HeaderImageHover = styled.img`\n  width: 100%;\n  position: absolute;\n`\n\nclass ProjectCell extends Component {\n  state = {\n    hover: false\n  };\n\n  changeImage = (hover) => {\n    this.setState({ hover })\n  }\n\n  render () {\n    return (\n      <ProjectCellContainer \n        onMouseEnter={() => this.changeImage(true)}\n        onMouseLeave={() => this.changeImage(false)}>\n        <HeaderImageHover src={this.props.project.imageHover}/>\n        <HeaderImage src={this.props.project.image}/>\n        <ProjectDetails>\n          <ProjectDescription\n            title={this.props.project.title}\n            subtitle={this.props.project.subtitle}\n            description={this.props.project.description}\n          />\n          <ProjectButtons\n            github={this.props.project.github}\n            devpost={this.props.project.devpost}\n          />\n        </ProjectDetails>\n      </ProjectCellContainer>\n    );\n  }\n}\n\nexport default ProjectCell"]},"metadata":{},"sourceType":"module"}