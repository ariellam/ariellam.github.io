{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/16031/GitHub/ariellam.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/16031/GitHub/ariellam.github.io/src/components/projects/projects.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex; \\n  flex-direction: column;\\n  width: 90vw;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport ProjectCell from './projectCell';\nimport ProjectsData from './projectsData';\nimport SectionTitle from '../sectionTitle';\nimport StackGrid from 'react-stack-grid';\nconst SectionWrapper = styled.div(_templateObject());\n\nclass Projects extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderProjectCells = () => {\n      const projectNames = ['lift', 'describe', 'givingtree'];\n      var projectArray = [];\n\n      for (var i = 0; i < projectNames.length; i++) {\n        const project = ProjectsData[projectNames[i]];\n        projectArray.push(React.createElement(ProjectCell, {\n          project: project,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }));\n      }\n\n      return projectArray;\n    };\n  }\n\n  render() {\n    return React.createElement(SectionWrapper, {\n      id: \"projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(SectionTitle, {\n      title: \"projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(StackGrid, {\n      columnWidth: 380,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.renderProjectCells()));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/16031/GitHub/ariellam.github.io/src/components/projects/projects.jsx"],"names":["React","Component","styled","ProjectCell","ProjectsData","SectionTitle","StackGrid","SectionWrapper","div","Projects","renderProjectCells","projectNames","projectArray","i","length","project","push","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,MAAMC,cAAc,GAAGL,MAAM,CAACM,GAAV,mBAApB;;AAMA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BS,kBAD+B,GACV,MAAM;AACzB,YAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,UAAT,EAAqB,YAArB,CAArB;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,YAAY,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,cAAME,OAAO,GAAGX,YAAY,CAACO,YAAY,CAACE,CAAD,CAAb,CAA5B;AACAD,QAAAA,YAAY,CAACI,IAAb,CACE,oBAAC,WAAD;AACE,UAAA,OAAO,EAAED,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AACD,aAAOH,YAAP;AACD,KAb8B;AAAA;;AAc/BK,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,kBAAL,EADH,CAFJ,CADF;AAQD;;AAvB8B;;AA0BjC,eAAeD,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport ProjectCell from './projectCell'\nimport ProjectsData from './projectsData'\nimport SectionTitle from '../sectionTitle'\nimport StackGrid from 'react-stack-grid'\n\nconst SectionWrapper = styled.div`\n  display: flex; \n  flex-direction: column;\n  width: 90vw;\n`\n\nclass Projects extends Component {\n  renderProjectCells = () => {\n    const projectNames = ['lift', 'describe', 'givingtree']\n    var projectArray = []\n    for(var i = 0; i < projectNames.length; i++) {\n      const project = ProjectsData[projectNames[i]]\n      projectArray.push(\n        <ProjectCell\n          project={project}\n        />\n      )\n    }\n    return projectArray\n  }\n  render () {\n    return (\n      <SectionWrapper id='projects'>\n        <SectionTitle title='projects'/>\n          <StackGrid columnWidth={380}>\n            {this.renderProjectCells()}\n          </StackGrid>\n      </SectionWrapper>\n    )\n  }\n}\n\nexport default Projects"]},"metadata":{},"sourceType":"module"}